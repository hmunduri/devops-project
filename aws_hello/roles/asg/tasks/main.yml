---
- name: "Gathering subnets needed from VPC for environment"
  ec2_vpc_subnet_facts:
    region: "{{region_name}}"
    filters:
      "tag:env": default
  register: gathered_subnets

- name: "Gathering facts about the asg"
  ec2_asg_facts:
     name: "{{asg_name}}"
     region: "{{region_name}}"
  register: asg_register

- name: "Auto Scaling Group Provisioning for environment"
  ec2_asg:
    region: "{{region_name}}"
    name: "{{asg_name}}"
    launch_config_name: "{{lc_name}}"
    state: "{{provision}}"
    health_check_period: 300
    health_check_type: EC2
    desired_capacity: "{{desired}}"
    min_size: "{{minimum}}"
    max_size: "{{maximum}}"
    availability_zones: ["{{gathered_subnets.subnets[0].availability_zone}}", "{{gathered_subnets.subnets[1].availability_zone}}"]
    vpc_zone_identifier: ["{{gathered_subnets.subnets[0].id}}", "{{gathered_subnets.subnets[1].id}}"]
    wait_for_instances: yes
    wait_timeout: 600
    tags:
      - Name: "{{instance_name}}"
      - env: default
  register: asg_create
  when: asg_register.results|length == 0

- name: "Auto Scaling Group Provisioning for {{env}} environment"
  ec2_asg:
    region: "{{region_name}}"
    name: "{{asg_name}}"
    launch_config_name: "{{asg_register.results[0].launch_configuration_name}}"
    state: "{{provision}}"
    health_check_period: 300
    health_check_type: EC2
    desired_capacity: "{{desired}}"
    min_size: "{{minimum}}"
    max_size: "{{maximum}}"
    availability_zones: ["{{gathered_subnets.subnets[0].availability_zone}}", "{{gathered_subnets.subnets[1].availability_zone}}"]
    vpc_zone_identifier: ["{{gathered_subnets.subnets[0].id}}", "{{gathered_subnets.subnets[1].id}}"]
    wait_for_instances: yes
    wait_timeout: 600
    tags:
      - Name: "{{instance_name}}"
      - env: default
  register: asg_create
  when: asg_register.results|length != 0

- name: "Scale-UP Policy for {{asg_name}}"
  ec2_scaling_policy:
    state: present
    region: "{{region_name}}"
    name: "{{item.name}}"
    asg_name: "{{asg_name}}"
    adjustment_type: "{{item.adjustment_type}}"
    min_adjustment_step: "{{item.min_adjustment_step}}"
    scaling_adjustment: "{{item.scaling_adjustment}}"
    cooldown: "{{item.cooldown}}"
  with_items:
    - name: "Increase Group Size"
      adjustment_type: "ChangeInCapacity"
      scaling_adjustment: +1
      min_adjustment_step: 1
      cooldown: 180
    - name: "Decrease Group Size"
      adjustment_type: "ChangeInCapacity"
      scaling_adjustment: -1
      min_adjustment_step: 1
      cooldown: 300
  register: sp_results

- name: Configure High CPU Alarm
  ec2_metric_alarm:
    region: "{{region_name}}"
    name: "{{asg_name}}-High-CPU-Alarm"
    state: present
    metric: "CPUUtilization"
    namespace: "AWS/EC2"
    statistic: "Average"
    comparison: ">="
    threshold: 75.0
    period: 300
    evaluation_periods: 1
    unit: "Percent"
    dimensions:
      AutoScalingGroupName: "{{asg_name}}"
    alarm_actions: "{{sp_results.results[0].arn}}"

- name: Configure Low CPU Alarm
  ec2_metric_alarm:
    region: "{{region_name}}"
    name: "{{asg_name}}-Low-CPU-Alarm"
    state: present
    metric: "CPUUtilization"
    namespace: "AWS/EC2"
    statistic: "Average"
    comparison: "<="
    threshold: 20.0
    period: 300
    evaluation_periods: 2
    unit: "Percent"
    dimensions:
      AutoScalingGroupName: "{{asg_name}}"
    alarm_actions: "{{sp_results.results[1].arn}}"
